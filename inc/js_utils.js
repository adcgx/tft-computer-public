export function load_json(e){return fetch(e).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>e)).catch((e=>{throw console.error("Failed to fetch json:",e),e}))}export function init_module_with_memory(e,o){const r={memory:o};return WebAssembly.instantiate(e,{env:r}).then((e=>e.module?e.instance:e)).catch((e=>{throw console.error("WASM instantiate error:",e),e}))}export function load_module_and_instantiate(e){return fetch(e).then((e=>e.arrayBuffer())).then((e=>{e=new Uint8Array(e);const o=Math.ceil(131071/65536);return init_module_with_memory(e,new WebAssembly.Memory({initial:o,maximum:o}))})).catch((e=>{throw console.error("WASM instantiate error:",e),e}))}export function load_module_and_compile(e){return fetch(e).then((e=>e.arrayBuffer())).then((o=>(o=new Uint8Array(o),console.log("Compiling wasm module",e),WebAssembly.compile(o)))).catch((e=>{throw console.error("WASM compile error:",e),e}))}export function popcount(e){let o=0;for(;e;)e&=e-1n,++o;return o}